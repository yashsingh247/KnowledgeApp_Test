@model KnowledgeApp_Test.Models.Targets.SeasonTarget
@using KnowledgeApp_Test.Services;
@using KnowledgeApp_Test.Models.Common
@using KnowledgeApp_Test.Models.Parameters
@using KnowledgeApp_Test.Models.Administration
@{
    ViewBag.Title = "Season Target";
    DropdownListSevices ds = new DropdownListSevices();
    List<Unit> Unitlist = ds.GetUnitddl();
    List<Parameter> Parameter = ds.GetParemeterddl();
    List<CrushingSeason> CrushingSeason = ds.GetCrushingSeasonddl();
    GeneralServices GS = new GeneralServices();
    List<RolePermisssion> right = GS.ValidateForm(@ViewBag.Title);
}
@if (right.Count == 0 || right == null)
{
    Response.Redirect("/Login/Access");
}
else
{
    <div class="row">
        <div class="col-sm-12">

            <h3 style="color:#0090d9;">Season Target</h3>

        </div>
    </div>
    if (right[0].BtnAdd == true)
    {
    <a class="btn btn-success" style="margin-bottom:10px" onclick="PopupForm('@Url.Action("AddeditSeasonTarget", "Targets")')"><i class="fa fa-plus"></i> Add New Season Target</a>
    }
    <hr />
    <div class="d-flex justify-content-center mt-3 login_container" id="DeleteMessge">
        @Html.Raw(@ViewBag.Alert)
    </div>

    <div class="row" style="background-color: #f0f3f5">
        <div class="col-md-4">
            <div class="form-group">
                CrushingSeason
                @Html.DropDownListFor(m => m.CrushingSeasonId, new SelectList(CrushingSeason, "CrushingSeasonId", "CrushingSeasonName"), "Select Crushing Season", new { @class = "form-control ddl", @Id = "CrushingSeason2" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                Unit
                @Html.DropDownListFor(m => m.UnitId, new SelectList(Unitlist, "UnitId", "UnitName"), "Select Unit", new { @class = "form-control ddl", @Id = "Unit2" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                Parameter
                @Html.DropDownListFor(m => m.ParameterId, new SelectList(Parameter, "ParameterId", "ParameterName"), "Select Unit", new { @class = "form-control ddl", @Id = "Parameter2" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table class="table table-bordered" id="Target" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th width="15%"></th>
                            <th>Id</th>
                            <th>Crushing Season Name</th>
                            <th width="15%">Unit Name</th>
                            <th width="15%">Parameter Name</th>
                            <th>Target Value</th>
                            <th>Actual Value</th>
                            <th>C.S.Id</th>
                            <th>Parameter Id</th>
                            <th>Unit Id</th>

                        </tr>
                    </thead>
                    <tbody id="tbody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {

        $(".ddl").select2({placeholder: "select Option ",allowClear: true, theme: "classic"});

        $(".ddl").on('change', function () {
            var CrushingSeason = $("#CrushingSeason2").val();
            var Unit = $("#Unit2").val();
            var Parameter = $("#Parameter2").val();
            GetSeasonTargetData(CrushingSeason, Unit, Parameter)
        });
       GetSeasonTargetData("", "", "");
    });

    function GetSeasonTargetData(CrushingSeason, Unit, Parameter) {
        $("#Target").DataTable().clear().draw();
        $("#Target").DataTable().destroy();

        var Urllink = '/Targets/SeasonTargetData?CrushingSeason=' + CrushingSeason + '&Unit=' + Unit + '&Parameter=' + Parameter;

        $('#Target').DataTable({
            "ajax": {
                "url": Urllink,
                "type": "post",
                "datatype": "json"
            },
            "columns": [{
                "data": "SeasonTargetId", "render": function (data)
                {
                    return "@if (right[0].btnEdit == true){<a class='btn btn-default btn-sm' onclick=PopupForm('@Url.Action("AddeditSeasonTarget", "Targets")/" + data + "')><i class='fa fa-pencil'></i></a>}@if (right[0].btnDelete == true){<a class='btn btn-danger btn-sm' style='margin-left:5px' onclick=Delete(" + data + ")><i class='fa fa-trash'></i></a>}";
                },},
                { "data": "SeasonTargetId" },
                { "data": "CrushingSeasonName" },
                { "data": "UnitName" },
                {"data": "ParameterName",},
                { "data": "TargetValue" },
                { "data": "ActualValue" },
                { "data": "CrushingSeasonId" },
                { "data": "ParameterId" },
                { "data": "UnitId" },

            ],
            columnDefs: [
                {
                    targets: 1,
                    className: 'noVis'
                }
            ],
            dom: 'Blfrtip',

            buttons: [
                {
                    extend: 'pdf',
                    action: newexportaction,
                },
                {

                    extend: 'excel',
                    action: newexportaction,
                },
                {

                    extend: 'print',
                    action: newexportaction,
                },
                {
                    extend: 'colvis',
                    columns: ':not(.noVis)'
                }
            ],

            "serverSide": "true",
            "order": [0, "asc"],
             "processing": "true",scrollX: true,scrollY: true,paging: true,
            "language":
            {
                "processing": "Processing Please Wait....."
            }
        });

    }
    function PopupForm(url) {
        console.log(url)

        var formDiv = $('<div/>');
        $.get(url)
            .done(function (response) {
                formDiv.html(response);
                Popup = formDiv.dialog({
                    autoOpen: true,
                    resizable: false,
                    title: 'Fill Season Target Details',
                    height: 500,
                    width: 700,
                    close: function () {
                        Popup.dialog('destroy').remove();
                    }

                });
            });
    }
</script>

