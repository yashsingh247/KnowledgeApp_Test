@model KnowledgeApp_Test.Models.Common.UnitCrushingSeason
@using KnowledgeApp_Test.Services;
@using KnowledgeApp_Test.Models.Common;
@using KnowledgeApp_Test.Models.Administration

@{
    ViewBag.Title = "Unit Crushing Season";
    DropdownListSevices dropdownListSevices = new DropdownListSevices();
    List<Unit> UnitList = dropdownListSevices.GetUnitddl();
    List<CrushingSeason> CrushingSeasonsList = dropdownListSevices.GetCrushingSeasonddl();
    GeneralServices GS = new GeneralServices();
    List<RolePermisssion> right = GS.ValidateForm(@ViewBag.Title);
}
@if (right.Count == 0 || right == null)
{
    Response.Redirect("/Login/Access");
}
else
{
<div class="row">
    <div class="col-sm-12">
        <h3 style="color:#0090d9;">@ViewBag.Title</h3>
    </div>
</div>
    if (right[0].BtnAdd == true)
    {
<a class="btn btn-success" style="margin-bottom:10px" onclick="PopupForm('@Url.Action("AddeditUnitCrushingSeason", "Common")')"><i class="fa fa-plus"></i> Add New Unit Crushing Season</a>
    }
<hr />
<div class="d-flex justify-content-center mt-3 login_container" id="DeleteMessge">
    @Html.Raw(@ViewBag.Alert)
</div>
<div class="row">
    <div class="col-md-3">
        <div class="form-group">
            Crushing Season:
            @Html.DropDownListFor(m => m.CrushingSeason, new SelectList(CrushingSeasonsList, "CrushingSeasonId", "CrushingSeasonName"), "Select CrushingSeason", new { @class = "form-control ddl Tabledata", @id = "CrushingSeason2" })
        </div>
    </div>
    <div class="col-md-3">
        Unit:
        @Html.DropDownListFor(m => m.Unit, new SelectList(UnitList, "UnitId", "UnitName"), "Select Unit", new { @class = "form-control ddl Tabledata", @id = "Unit2" })
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <span>Crushing Start Date</span>
            <input type="text" class="form-control Tabledata date" id="CSDT" />
            @*@Html.TextBoxFor(m => m.CrushingStartDate, new { @class = "form-control Tabledata date", @id = "CSDT" })*@
        </div>
    </div>
    <div class="col-sm-3">
        <div class="form-group">
            <span>Crushing End Date</span>
            <input type="text" class="form-control Tabledata date" id="CEDT" />
            @*@Html.TextBoxFor(m => m.CrushingEndDate, new {Value=Model.CrushingEndDate.ToString("dd-MM-yyyy"), @class = "form-control Tabledata date", @id = "CEDT" })*@
        </div>
    </div>
</div>
    if (right[0].btnView == true)
    {
<div class="row">
    <div class="col-md-12">
        <div class="table-responsive">
            <table class="table table-bordered dataTable" id="UnitCrushing" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th width="15%"></th>
                        <th>Id</th>
                        <th>Unit</th>
                        <th>Crushing Season </th>
                        <th>Crushing Start Date</th>
                        <th>Crushing End Date</th>
                        <th>Minutes Delayed Start</th>
                        <th>Minutes Early End</th>
                    </tr>
                </thead>

                <tbody>
                </tbody>
            </table>
        </div>

    </div>
</div>
    }
}

<script type="text/javascript">
    var Popup, dataTable;
    $(document).ready(function () {

        $('.date').datepicker({ dateFormat: 'dd-mm-yy' });
        $(".ddl").select2({
            placeholder: "select Option ",
            allowClear: true,
            theme: "classic"
        });
        getUnitCrusing();
        $('.Tabledata').on("change", function () {

            var CrushingSeason = $('#CrushingSeason2').val();
            var Unit = $('#Unit2').val();
            var CrushingStartDate = $('#CSDT').val();
            var CrushingEndDate = $('#CEDT').val();
            console.log(CrushingSeason, Unit, CrushingStartDate, CrushingEndDate)
            getUnitCrusing(CrushingSeason, Unit, CrushingStartDate, CrushingEndDate);
        });

        getUnitCrusing("","","","",)

    });
    function getUnitCrusing(CrushingSeason, Unit, CrushingStartDate, CrushingEndDate) {

        var Urllink = "/Common/UnitCrushingSeasonData?CrushingSeason=" + CrushingSeason + '&Unit=' + Unit + '&CrushingStartDate=' + CrushingStartDate + '&CrushingEndDate=' + CrushingEndDate;
        console.log(Urllink);
        $("#UnitCrushing").DataTable().clear().draw();
        $("#UnitCrushing").DataTable().destroy();
        $('#UnitCrushing').DataTable({
            "ajax": {
                "url": Urllink,
                "type": "post",
                "datatype": "json"
            },
            "columns": [{
                "data": "UnitCrushingSeasonId", "render": function (data)
                {
                    return "@if (right[0].btnEdit == true) {<a class='btn btn-default btn-sm' onclick=PopupForm('@Url.Action("AddeditUnitCrushingSeason", "Common")/" + data + "')><i class='fa fa-pencil'></i> </a>}@if (right[0].btnDelete == true) {<a class='btn btn-danger btn-sm' style='margin-left:5px' onclick=Delete(" + data + ")><i class='fa fa-trash'></i> </a>}";
                },},
            { "data": "UnitCrushingSeasonId" },
            { "data": "UnitName" },
            { "data": "CrushingSeasonName" },
            { "data": "CrushingStartDate",'render': function (jsonDate) {var date = new Date(parseInt(jsonDate.substr(6)));var month = ("0" + (date.getMonth() + 1)).slice(-2);return ("0" + date.getDate()).slice(-2) + '-' + month + '-' + date.getFullYear();}},
            {"data": "CrushingEndDate",'render': function (jsonDate) {var date = new Date(parseInt(jsonDate.substr(6)));var month = ("0" + (date.getMonth() + 1)).slice(-2);return ("0" + date.getDate()).slice(-2) + '-' + month + '-' + date.getFullYear();} },
                { "data": "MinutesDelayedStart" },
                { "data": "MinutesEarlyEnd" },
            ],
            columnDefs: [
                {
                    targets: 1,
                    className: 'noVis'
                }
            ],
            dom: 'Blfrtip',

            buttons: [
                {
                    extend: 'pdf',
                    action: newexportaction,
                },
                {
                    extend: 'excel',
                    action: newexportaction,
                },
                {
                    extend: 'print',
                    action: newexportaction,
                },
                {
                    extend: 'colvis',
                    columns: ':not(.noVis)'
                }
            ],
            "serverSide": "true",
            "order": [0, "asc"],
             "processing": "true",scrollX: true,scrollY: true,paging: true,
            "language":
            {
                "processing": "Processing Please Wait....."
            }
        });
    }
    function PopupForm(url) {
        console.log(url)
        
        var formDiv = $('<div/>');
        $.get(url)
            .done(function (response) {
                formDiv.html(response);
                Popup = formDiv.dialog({
                    autoOpen: true,
                    resizable: false,
                    title: 'Fill Unit Crushing Season Details',
                    height: 500,
                    width: 700,
                    close: function () {
                        Popup.dialog('destroy').remove();
                    }

                });
            });
    }
</script>
