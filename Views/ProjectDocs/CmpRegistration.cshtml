@model KnowledgeApp_Test.Models.ProjectDocs.CmpRegistration
@using KnowledgeApp_Test.Services
@using KnowledgeApp_Test.Models.ProjectDocs
@using KnowledgeApp_Test.Models.PlantData
@using KnowledgeApp_Test.Models.Common
@{
    ViewBag.Title = "Cmp Registration";
    DropdownListSevices ds = new DropdownListSevices();
    List<Unit> Unit = ds.GetUnitddl();
    List<Employee> Employee = ds.Employeeddl();
    List<PlantDepartment> PlantDepartment = ds.PlantDepartmentddl();
    List<PlantSubDepartment> PlantSubDepartment = ds.PlantSubDepartmentddl();
}



<div class="row">
    <div class="col-sm-12">

        <h3 style="color:#0090d9;">Cmp Registration</h3>

    </div>
</div>
<hr />
<div class="d-flex justify-content-center mt-3 login_container" id="DeleteMessge">
    @Html.Raw(@ViewBag.Alert)
</div>
<div class="row">
    <a class="btn btn-success" style="margin-bottom:10px" onclick="PopupForm('@Url.Action("AddCmpRegistration","ProjectDocs")')"><i class="fa fa-plus"></i> New Cmp Registration</a>

</div>

<div class="row" style="background-color: #f0f3f5">
    <div class="col-md-2">
        <div class="form-group">
            Unit
            @Html.DropDownListFor(m => m.UnitId, new SelectList(Unit, "UnitId", "UnitName"),"Select Unit", new { @class = "form-control ddl ", @Id = "Unit2" })
        </div>
    </div>

    <div class="col-md-2">
        <div class="form-group">
            Intiator
            @Html.DropDownListFor(m => m.IntiatorId, new SelectList(Employee, "EmployeeId", "EmployeeName"),"Select Intiator", new { @class = "form-control ddl", @id = "Intiator2" })
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            DocumentDepartment
            @Html.DropDownListFor(m => m.DocumentDepartmentId, new SelectList(PlantDepartment, "PlantDepartmentId", "DepartmentName"),"Select Department", new { @class = "form-control ddl", @id = "DocumentDepartment2" })
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            DocumentSubDepartment
            @Html.DropDownListFor(m => m.DocumentSubDepartmentId, new SelectList(PlantSubDepartment, "PlantSubDepartmentId", "SubDepartmentName"),"Select Sub Department", new { @class = "form-control ddl", @Id = "DocumentSubDepartment2" })
        </div>
    </div>




</div>

<div class="row">
    <div class="col-md-12">
        <div class="table-responsive">
            <table class="table table-bordered" id="CmpRegistration" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th width="15%"></th>
                        <th>Id</th>
                        <th>Registration Number</th>
                        <th>Registration Date</th>
                        <th>Unit Name</th>
                        <th>Subject</th>
                        <th>Status</th>
                        <th>Proposed Activity</th>
                        <th>Other Implications</th>
                        <th>Is Drawing Atached</th>
                        <th>Cost Of Change</th>
                        <th>Is Estimation Attached</th>
                        <th>Roi</th>
                        <th>Is RoiCalculation Attached</th>
                        <th>Proposal Drawn From</th>
                        <th>Is Training Required</th>
                        <th>Intiator Employee Code</th>
                        <th>Drawing Document</th>
                        <th>Roi Calculation Document</th>
                        <th>Is Implemented</th>
                        <th>Document Type</th>
                        <th>Preamble</th>
                        <th>Impact Quantity</th>
                        <th>Impact Quantity Detail</th>
                        <th>Is Impact On Safety</th>
                        <th>Impact On Safety Detail</th>
                        <th>Is Impact On Environment</th>
                        <th>Impact On Environment Detail</th>
                        <th>Is Impact On Food Safety</th>
                        <th>Impact On Food Safety Detail</th>
                        <th>Is Legal Requirement</th>
                        <th>Legal Requirement Detail</th>
                        <th>Training Detail</th>
                        <th>Remarks</th>
                        <th>Is Budget Taken</th>
                        <th>Estimation Document</th>
                        <th>Document DepartmentName</th>
                        <th>Document Sub Department Name</th>
                        <th>Is Sanction Required</th>
                        <th>Nature Of Expenditure</th>
                        <th>Budget Provision Amount</th>
                        <th>Present Proposal Amount</th>
                        <th>Balance Sanction Amount</th>
                        <th>Funtion Location In Plant</th>
                        <th>Sanction Date</th>
                        <th>Roi Document Type</th>
                        <th>Estimate Document Type</th>
                        <th>Document Department Id</th>
                        <th>Document Sub Department Id</th>
                        <th>Intiator Id</th>
                        <th>UnitId</th>
                    </tr>
                </thead>
                <tbody id="tbody">
                </tbody>
            </table>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {

        $(".ddl").select2({
            placeholder: "select Cmp Registration ",
            allowClear: true,
            theme: "classic"
        });
        $(".date").datepicker({ dateFormat: 'dd-mm-yy' });
        $(".ddl").on('change', function () {
            var SpecialAnalysisType = $("#Unit2").val();
            var Intiator2 = $("#Intiator2").val();
            var DocumentDepartment2 = $("#DocumentDepartment2").val();
            var DocumentSubDepartment2 = $("#DocumentSubDepartment2").val();
            getCmpRegistration(SpecialAnalysisType, Intiator2, DocumentDepartment2, DocumentSubDepartment2)
        });

        getCmpRegistration("", "", "", "")
    });
    function getCmpRegistration(Unit,Intiator,DocumentDepartment,DocumentSubDepartment) {
       
        var URL = '/ProjectDocs/CmpRegistrationData?Unit=' + Unit + '&Intiator=' + Intiator + '&DocumentDepartment=' + DocumentDepartment + '&DocumentSubDepartment=' + DocumentSubDepartment;

        $("#CmpRegistration").DataTable().clear().draw();
        $("#CmpRegistration").DataTable().destroy();
        $('#CmpRegistration').DataTable({
            "ajax": {
                "url": URL,
                "type": "post",
                "datatype": "json"
            },
            "columns": [{
                "data": "CmpRegistrationId", "render": function (data) {return "<a class='btn btn-default btn-sm' onclick=PopupForm('@Url.Action("AddCmpRegistration", "ProjectDocs")/" + data + "')><i class='fa fa-pencil'></i></a><a class='btn btn-danger btn-sm' style='margin-left:5px' onclick=Delete(" + data + ")><i class='fa fa-trash'></i></a>";},},
                { "data": "CmpRegistrationId" },
                { "data": "RegistrationNumber" },
                { "data": "RegistrationDate", 'render': function (jsonDate) { var date = new Date(parseInt(jsonDate.substr(6))); var month = ("0" + (date.getMonth() + 1)).slice(-2); return ("0" + date.getDate()).slice(-2) + '-' + month + '-' + date.getFullYear(); } },
                { "data": "UnitUnitName" },
                { "data": "Subject" },
                { "data": "Status" },
                { "data": "ProposedActivity" },
                { "data": "OtherImplications" },
                { "data": "IsDrawingAtached", render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "CostOfChange" },
                { "data": "IsEstimationAttached", render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "Roi" },
                { "data": "IsRoiCalculationAttached", render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "ProposalDrawnFrom" },
                { "data": "IsTrainingRequired", render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "IntiatorEmployeeCode" },
                { "data": "DrawingDocument" },
                { "data": "RoiCalculationDocument" },
                { "data": "IsImplemented", render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "DocumentType" },
                { "data": "Preamble" },
                { "data": "ImpactQuantity", render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "ImpactQuantityDetail" },
                { "data": "IsImpactOnSafety", render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "ImpactOnSafetyDetail" },
                { "data": "IsImpactOnEnvironment", render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "ImpactOnEnvironmentDetail" },
                {"data": "IsImpactOnFoodSafety" , render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "ImpactOnFoodSafetyDetail" },
                { "data": "IsLegalRequirement", render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "LegalRequirementDetail" },
                { "data": "TrainingDetail" },
                { "data": "Remarks" },
                { "data": "IsBudgetTaken", render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "EstimationDocument" },
                { "data": "DocumentDepartmentDepartmentName" },
                { "data": "DocumentSubDepartmentSubDepartmentName" },
                { "data": "IsSanctionRequired", render: function (data, type, row) { if (data == true) { return '<input type="checkbox" disabled="true"  checked  >'; } return '<input type="checkbox" disabled="true" readonly="true">'; }, },
                { "data": "NatureOfExpenditure" },
                { "data": "BudgetProvisionAmount" },
                { "data": "PresentProposalAmount" },
                { "data": "BalanceSanctionAmount" },
                { "data": "FuntionLocationInPlant" },
                { "data": "SanctionDate" , 'render': function (jsonDate) { var date = new Date(parseInt(jsonDate.substr(6))); var month = ("0" + (date.getMonth() + 1)).slice(-2); return ("0" + date.getDate()).slice(-2) + '-' + month + '-' + date.getFullYear(); } },
                { "data": "RoiDocumentType" },
                { "data": "EstimateDocumentType" },
                { "data": "DocumentDepartmentId" },
                { "data": "DocumentSubDepartmentId" },
                { "data": "IntiatorId" },
                { "data": "UnitId" },

              
            ],
            "serverSide": "true",
            "order": [0, "asc"],
             "processing": "true",scrollX: true,scrollY: true,paging: true,
            columnDefs: [
                {
                    targets: 1,
                    className: 'noVis'
                }
            ],
            dom: 'Blfrtip',




            buttons: [
                {
                    title: 'Cmp Registration',
                    orientation: 'landscape',
                    pageSize: 'LEGAL',
                    extend: 'pdf',
                },
                {
                    title: 'Cmp Registration',
                    extend: 'excel',
                },
                {
                    title: 'Cmp Registration',
                    extend: 'print',
                },
                {
                    extend: 'colvis',
                    columns: ':not(.noVis)'
                }
            ],
            "serverSide": "true",
            "order": [0, "asc"],
             "processing": "true",scrollX: true,scrollY: true,paging: true,
            "language":
            {
                "processing": "Processing Please Wait....."
            }
        });
        }
    function PopupForm(url) {

        console.log(url)

        var formDiv = $('<div/>');
        $.get(url)
            .done(function (response) {
                formDiv.html(response);
                Popup = formDiv.dialog({
                    autoOpen: true,
                    resizable: false,
                    title: 'Fill Cmp Registration Details',
                    height: 800,
                    width: 1200,
                    close: function () {
                        Popup.dialog('destroy').remove();
                    }

                });
            });
    }
</script>

