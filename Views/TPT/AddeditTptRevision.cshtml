@model KnowledgeApp_Test.Models.TPT.TptRevision
@using KnowledgeApp_Test.Models.Common
@using KnowledgeApp_Test.Services
@using KnowledgeApp_Test.Models.Administration
@{
    Layout = null;
    DropdownListSevices ds = new DropdownListSevices();
    List<CrushingSeason> crushingSeason = ds.GetCrushingSeasonddl();
    List<Unit> unit = ds.GetUnitddl();
    var Id = "Tpt Revision";
    GeneralServices GS = new GeneralServices();
    List<RolePermisssion> right = GS.ValidateForm(Id);
}
@if (right.Count == 0 || right == null)
{
    Response.Redirect("/Login/Access");
}
@if (right[0].BtnAdd == true || right[0].btnEdit==true)
{
    using (Html.BeginForm("AddeditTptRevision", "TPT", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
    {
        <div class="row">
            <div class="col-md-4">
                Unit
            </div>
            <div class="col-md-8">
                <div class="form-group">
                    @Html.HiddenFor(m => m.RevisionId)
                    @Html.DropDownListFor(m => m.UnitId, new SelectList(unit, "UnitId", "UnitName"), "Select Unit", new { @class = "form-control ddl", @required = "required" })
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                Revision Code
            </div>
            <div class="col-md-8">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.RevisionCode, new { @class = "form-control Tint", @onkeypress = "javascript:return isNumber(event)", @required = "required" })
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                Revision Name
            </div>
            <div class="col-md-8">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.RevisionName, new { @class = "form-control", @maxlength = "20" })
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                Creation Date
            </div>
            <div class="col-md-8">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.CreationDate, new { Value = Model.CreationDate.ToString("dd-MM-yyyy"), @class = "form-control date" })
                </div>

            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                Season Start Date
            </div>
            <div class="col-md-8">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.SeasonStartDate, new { Value = Model.SeasonStartDate.ToString("dd-MM-yyyy"), @class = "form-control date" })
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                Crushing Season
            </div>
            <div class="col-md-8">
                <div class="form-group">
                    @Html.DropDownListFor(m => m.CrushingSeasonId, new SelectList(crushingSeason, "CrushingSeasonId", "CrushingSeasonName"), "Select Crushing Season", new { @class = "form-control ddl" })
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                SeasonDays
            </div>
            <div class="col-md-8">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.SeasonDays, new { @class = "form-control Tint", @onkeypress = "javascript:return isNumber(event)" })
                </div>

            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                Season End Date
            </div>
            <div class="col-md-8">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.SeasonEndDate, new { Value = Model.SeasonEndDate.ToString("dd-MM-yyyy"), @class = "form-control date" })
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                @if (Model.RevisionId == 0 && right[0].BtnAdd == true)
                {
                    <button class="form-control bg-success">Save</button>
                }
                else if(right[0].btnEdit == true)
                {
                    <button class="form-control bg-info">Update</button>
                }


            </div>

        </div>
    }
}
    <script type="text/javascript">
        $(document).ready(function () {
            $(".date").datepicker({ dateFormat: 'dd-mm-yy' });
            $(".ddl").select2({
                placeholder: "select Option",
                allowClear: true,
                theme: "classic"
            });
            $('.date').datepicker({ dateFormat: 'dd-mm-yy', maxDate: '+0D', });
            if ($("#CreationDate").val() == '01-01-0001') {
                $('#CreationDate').datepicker('setDate', 'today');
            }
            $('.date').datepicker({ dateFormat: 'dd-mm-yy', maxDate: '+0D', });
            if ($("#SeasonStartDate").val() == '01-01-0001') {
                $('#SeasonStartDate').datepicker('setDate', 'today');
            }
            if ($("#SeasonEndDate").val() == '01-01-0001') {
                $('#SeasonEndDate').datepicker('setDate', 'today');
            }
            if ($("#RevisionCode").val() == 0) {
                $("#RevisionCode").val('');
            }
        });
    </script>

